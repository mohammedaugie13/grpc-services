# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
import polynomial_pb2 as polynomial__pb2


class PolynomialStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.
    Args:
      channel: A grpc.Channel.
    """
        self.Solve = channel.unary_unary(
            '/Polynomial/Solve',
            request_serializer=polynomial__pb2.PolynomialInput.SerializeToString,
            response_deserializer=polynomial__pb2.PolynomialOutput.FromString,
        )


class PolynomialServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def Solve(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PolynomialServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Solve': grpc.unary_unary_rpc_method_handler(
            servicer.Solve,
            request_deserializer=polynomial__pb2.PolynomialInput.FromString,
            response_serializer=polynomial__pb2.PolynomialOutput.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('Polynomial', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
